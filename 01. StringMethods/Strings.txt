Question: Describe the strings in C#. What is typical for the string data type? 
Describe the most important methods of the String class.

Strings are sequences of characters
Each character is a Unicode symbol
Represented by the string data type in C# (System.String)
	String objects contain an immutable (read-only) sequence of characters
	Strings use Unicode to support multiple languages and alphabets
Strings are stored in the dynamic memory 
System.String is reference type
String objects are like arrays of characters (char[])
Have fixed length (String.Length)
Elements can be accessed directly by index

Methods:
Clone					Returns a reference to this instance of String.
Compare(String, String)	Compares two specified String objects and returns an integer that indicates their relative position in the sort order.
Concat(Object)			Creates the string representation of a specified object.
Contains				Returns a value indicating whether the specified String object occurs within this string.
Copy					Creates a new instance of String with the same value as a specified String.
EndsWith(String)		Determines whether the end of this string instance matches the specified string.
Equals(String, String)	Determines whether two specified String objects have the same value.
Format(String, Object)	Replaces one or more format items in a specified string with the string representation of a specified object.
GetEnumerator			Retrieves an object that can iterate through the individual characters in this string.
GetType					Gets the Type of the current instance. (Inherited from Object.)
IndexOf(String)			Reports the zero-based index of the first occurrence of the specified string in this instance.
Insert					Returns a new string in which a specified string is inserted at a specified index position in this instance.
Join(String, IEnumerable<String>)	Concatenates the members of a constructed IEnumerable<T> collection of type String, using the specified separator between each member.
LastIndexOf(Char)		Reports the zero-based index position of the last occurrence of a specified Unicode character within this instance.
PadLeft(Int32, Char)	Returns a new string that right-aligns the characters in this instance by padding them on the left with a specified Unicode character, for a specified total length.
PadRight(Int32, Char)	Returns a new string that left-aligns the characters in this string by padding them on the right with a specified Unicode character, for a specified total length.
Remove(Int32, Int32)	Returns a new string in which a specified number of characters in the current instance beginning at a specified position have been deleted.
Replace(String, String)	Returns a new string in which all occurrences of a specified string in the current instance are replaced with another specified string.
Split(Char[], Int32)	Returns a string array that contains the substrings in this instance that are delimited by elements of a specified Unicode character array. A parameter specifies the maximum number of substrings to return.
StartsWith(String)	Determines whether the beginning of this string instance matches the specified string.
Substring(Int32, Int32)	Retrieves a substring from this instance. The substring starts at a specified character position and has a specified length.
ToCharArray()			Copies the characters in this instance to a Unicode character array.
ToLower()				Returns a copy of this string converted to lowercase.
ToString()				Returns this instance of String; no actual conversion is performed. (Overrides Object.ToString().)
ToUpper()				Returns a copy of this string converted to uppercase.
Trim()					Removes all leading and trailing white-space characters from the current String object.
